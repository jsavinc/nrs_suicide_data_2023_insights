---
title: "NRS suicide data 2023 insights"
author: "Jan Savinc"
format: 
  html:
    toc: true
    code-fold: true
editor_options: 
  chunk_output_type: console
---


# Packages

```{r}
# note: there is an error when rendering quarto doc using quarto version 1.3.353 and knitr 1.43; downgrading knitr to 1.42 solves it, and newer versions of quarto will solve it also
# See bug report: https://github.com/quarto-dev/quarto-cli/issues/5702

require(pacman)
pacman::p_load(
  "tidyverse",
  "readxl",
  "janitor",
  "DT",
  "patchwork",
  "glue"
)
```

# Functions

```{r}
output_table_with_csv_button <- function(data_tbl, filename, caption = NULL) {
	require(DT)
	DT::datatable(
		data = data_tbl,
		caption = caption,
		extensions = "Buttons",
		options = list(
			pageLength = 200,
			dom = "Bfrtip",
			buttons = list(
				list(extend = "csv", filename = filename)  # adds .csv extension automatically
			)
		),
		class = "cell-border stripe",  # striped display of data for readability
		rownames = FALSE  # don't number rows
	)
}

create_age_groups_to_match_previous_release <- function(age_group_variable) {
  case_when(
    age_group_variable %in% c("0", "1_4", "5_9", "10_14") ~ "0-14",
    age_group_variable %in% c("15_19", "20_24") ~ "15-24",
    age_group_variable %in% c("25_29", "30_34") ~ "25-34",
    age_group_variable %in% c("35_39", "40_44") ~ "35-44",
    age_group_variable %in% c("45_49", "50_54") ~ "45-54",
    age_group_variable %in% c("55_59", "60_64") ~ "55-64",
    age_group_variable %in% c("65_69", "70_74") ~ "65-74",
    age_group_variable %in% c("75_79", "80_84", "85_89", "90_or_more") ~ "75+",
    TRUE ~ age_group_variable
  )
}

create_five_year_periods <- function(year_variable) {
  min_year = min(year_variable)
  max_year = max(year_variable)
  last_year = max(year_variable)-4
  five_year_periods <- paste0(min_year:last_year, "-", (min_year+4):max_year)
  return(five_year_periods)
}
```



# Download data
  
~~Note: this is based on the 2022 data release, reporting on probable deaths by suicide up to 2021.
I'm assuming the 2023 format will be the same as 2022, so I can swap out for the later file once it's released here.~~

This is now based on the 2023 release (data up to 2022).

```{r}
# url_2022 <- "https://www.nrscotland.gov.uk/files//statistics/probable-suicides/2021/suicides-21-all-tabs.xlsx"

url_2023 <- "https://www.nrscotland.gov.uk/files//statistics/probable-suicides/2022/suicides-22-all-tabs.xlsx"

if (!dir.exists("./data/")) dir.create("./data")

if (!file.exists(file.path("./data", basename(url_2023)))) {
download.file(url = url_2023, destfile = file.path("./data", basename(url_2023)), mode = "wb")
}

path_to_data <- file.path("./data", basename(url_2023))
```

# Load data

Note: I load data as required for the below tables & charts


# 'Chart 1': age-standardised mortality rate by sex

```{r}
table_1 <- 
  read_excel(path_to_data, sheet = "Table_1", skip = 4) %>%
  clean_names

age_sex_standardided_mort <-
  table_1 %>%
  pivot_longer(
    cols = 
      c(
        age_standardised_mortality_rate_persons,
        age_standardised_mortality_rate_females,
        age_standardised_mortality_rate_males
      ),
    names_to = "sex", values_to = "asmr", names_transform = ~str_extract(.x, pattern = "(persons|males|females)$")
  ) %>%
  select(year, sex, asmr) %>%
  distinct %>%
  mutate(
    year = as.integer(year),
    sex = factor(sex, levels = c("persons","males","females"))
    ) %>%
  filter(!is.na(asmr))
  
(chart_1 <- 
  ggplot(
    data = age_sex_standardided_mort,
    aes(x = year, y = asmr, colour = sex)
  ) +
    geom_line() +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    scale_x_continuous(limits = c(1994,max(age_sex_standardided_mort$year)), breaks = seq.int(1994, 2022, by = 2)) +  # eh, good enough
    scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits = c(0,NA)) +
    scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      title = "Chart 1. Suicide rates, Scotland, all ages",
      subtitle = "Source: NRS",
      y = "Age-sex standardised rate per 100,000",
      x = NULL
      )
)
```


# Five-year averages

These are included in Tables 3B & 4B, alongside the Health Board/Local Authority split

```{r}
table_3b <- 
  read_excel(path_to_data, sheet = "Table_3B", skip = 4) %>%
  clean_names %>%
  mutate(
    year_5 = str_replace_all(year, pattern = "to", replacement = "-") %>%
      factor,
  ) %>% 
  select(-year) %>%
  relocate(year_5)

table_4b <- 
  read_excel(path_to_data, sheet = "Table_4B", skip = 4) %>%
  clean_names %>%
  mutate(
    year_5 = str_replace_all(year, pattern = "to", replacement = "-") %>%
      factor,
  ) %>% 
  select(-year) %>%
  relocate(year_5)


five_year_averages <- 
  table_3b %>%
  filter(health_board == "Scotland") %>%
  select(-health_board) %>%
  mutate(sex = factor(sex,levels = c("Persons","Males","Females")))

(fig_five_year_averages <- 
  ggplot(
    data = five_year_averages,
    aes(x = year_5, y = age_standardised_mortality_rate, colour = sex, group = sex)
  ) +
    geom_line() +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    # TODO: is this x scale too crowded in the rendered doc?
    # scale_x_discrete(breaks = levels(five_year_averages$year_5)[seq.int(from=1,to=17,by=2)]) +
    scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits = c(0,NA)) +
    scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      title = "5-year average suicide rates, Scotland, all ages",
      subtitle = "Source: NRS",
      y = "5-year average age-sex standardised rate per 100,000",
      x = NULL
      )
)

five_year_averages %>%
  output_table_with_csv_button(filename = "five_year_averages", caption = "Five year averages of age-standardised mortality rate fue to probable suicide.") %>%
  DT::formatRound(columns = 3:5, digits = 2)
```

# Five-year average by HB

```{r}
five_year_averages_hb <-
  table_3b %>%
  mutate(sex = factor(sex,levels = c("Persons","Males","Females")))


(fig_five_year_averages_hb <- 
  ggplot(
    data = five_year_averages_hb,
    aes(x = year_5, y = age_standardised_mortality_rate, colour = sex, group = sex)
  ) +
    geom_line() +
    theme_minimal() +
    facet_wrap(~health_board, scales ="free_y") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    # TODO: is this x scale too crowded in the rendered doc?
    # scale_x_discrete(breaks = levels(five_year_averages$year_5)[seq.int(from=1,to=17,by=2)]) +
    scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits = c(0,NA)) +
    scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      title = "5-year average suicide rates, Scotland, all ages",
      subtitle = "Source: NRS",
      y = "5-year average age-sex standardised rate per 100,000",
      x = NULL
      )
)
```

# Five-year average by LA

```{r}
five_year_averages_la <-
  table_4b %>%
  mutate(sex = factor(sex,levels = c("Persons","Males","Females")))

(fig_five_year_averages_la <- 
  ggplot(
    data = five_year_averages_la,
    aes(x = year_5, y = age_standardised_mortality_rate, colour = sex, group = sex)
  ) +
    geom_line() +
    theme_minimal() +
    facet_wrap(~council_area, scales ="free_y") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    # TODO: is this x scale too crowded in the rendered doc?
    # scale_x_discrete(breaks = levels(five_year_averages$year_5)[seq.int(from=1,to=17,by=2)]) +
    scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits = c(0,NA)) +
    scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      title = "5-year average suicide rates, Scotland, all ages",
      subtitle = "Source: NRS",
      y = "5-year average age-sex standardised rate per 100,000",
      x = NULL
      )
)
```


# 'Chart 2 & 3': 5-year ASMR by age group & sex, comparing decades apart

This uses data from Table 2B, with some age categories collapsed to form larger age groups (though those age groups are not the same as the 'Larger age groups' included in the NRS data).

Note that I simply averaged rates between age groups when I combined them.

```{r}
table_2a <-
  read_excel(path_to_data, sheet = "Table_2A", skip = 4) %>%
  clean_names %>%
  mutate(
    sex = factor(sex, levels = c("Persons", "Males", "Females"))
  )

table_2b <-
  read_excel(path_to_data, sheet = "Table_2B", skip = 4) %>%
  clean_names %>%
  mutate(
    sex = factor(sex, levels = c("Persons", "Males", "Females"))
  )
# note: table 2a and 2b use slightly different age groups so the rates aren't necessarily compatible - I was hoping to infer population size by dividing rate by death counts, but they aren't provided for the same age groups...


# age_specific_numbers <-
#   table_2a %>%
#   pivot_longer(
#     cols = age_0_4:age_85,
#     names_to = "age_group",
#     values_to = "number",
#     names_transform = ~ str_remove_all(.x, pattern = "age\\_")
#   )

age_specific_rates <-
  table_2b %>%
  pivot_longer(
    cols = age_0:age_90_or_more,
    names_to = "age_group",
    values_to = "rate",
    names_transform = ~ str_remove_all(.x, pattern = "age\\_")
  )

crude_rate_by_age_group_by_year <-
  age_specific_rates %>%
  mutate(
    age_group_new = create_age_groups_to_match_previous_release(age_group)
  ) %>%
  group_by(year, sex, age_group_new) %>%
  summarise(
    crude_rate = mean(rate),
    .groups = "drop"
  ) %>%
  (function(data_tbl) {
    bind_rows(
      data_tbl,
      data_tbl %>%
        group_by(year,sex) %>%
        summarise(
          crude_rate = mean(crude_rate),
          age_group_new = "All ages",
          .groups = "drop"
          )
      )
  })


crude_rate_by_age_group_by_five_years <-
  map_dfr(
    .x = min(crude_rate_by_age_group_by_year$year) : (max(crude_rate_by_age_group_by_year$year)-4),
    .f = function(year_start) {
      crude_rate_by_age_group_by_year %>%
        filter(year %in% year_start:(year_start+4)) %>%
        group_by(age_group_new, sex) %>%
        summarise(
          year_5 = paste0(year_start,"-",year_start+4),
          crude_rate = mean(crude_rate),
          .groups = "drop"
          )
    }
  ) %>%
  relocate(year_5)

current_5_year_group <- max(crude_rate_by_age_group_by_five_years$year_5)
twenty_years_before_5_year_group <- paste0(
  parse_number(current_5_year_group)-20,"-",parse_number(current_5_year_group)-16
)

(chart_2_and_3 <-
  crude_rate_by_age_group_by_five_years %>%
  filter(year_5 %in% c(current_5_year_group, twenty_years_before_5_year_group)) %>%
  ggplot(data = ., aes(x=age_group_new, y=crude_rate, fill = year_5)) +
  geom_col(position = position_dodge(width = 0.8), width=0.8, colour = "grey10") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
    ) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    facet_wrap(~sex) +
    labs(
      x = NULL, 
      y = "Age-specific crude rate per 100,000", 
      title = "Chart 2 & 3. Deaths by suicide over time by age group",
      subtitle = "Source: NRS"
      )
)

crude_rate_by_age_group_by_five_years %>%
  pivot_wider(names_from = age_group_new, values_from = crude_rate) %>%
  output_table_with_csv_button(filename = "five_year_average_crude_rate_by_age_group_and_sex", caption = "Five-year average crude rate of mortality, by age group and sex.") %>%
  DT::formatRound(columns = 3:11, digits = 2)
```


# Ratio of most deprived SIMD to least deprived, annual data

This is computed from quintiles 1 (most deprived) & 5 (least deprived) in Table 5.

Note: I originally plotted both the ASMR and death ratios - they are virtually the same.

```{r}
table_5 <- 
  read_excel(path_to_data, sheet = "Table_5", skip = 4) %>%
  clean_names %>%
  mutate(
    sex = factor(sex, levels = c("Persons", "Males", "Females"))
  )

ratio_simd_most_to_least_deprived <-
  table_5 %>%
  group_by(year, sex) %>%
  summarise(
    ratio_asmr = age_standardised_rate_of_mortality_asmr[simd_quintile==1] / age_standardised_rate_of_mortality_asmr[simd_quintile==5],
    ratio_deaths = deaths[simd_quintile==1] / deaths[simd_quintile==5],
    .groups = "drop"
  ) %>%
  arrange(sex)



(fig_ratio_simd <-
  ggplot(data = ratio_simd_most_to_least_deprived, aes(x=year, y=ratio_asmr, colour=sex)) +
  geom_line() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_continuous(limits = c(2001,max(ratio_simd_most_to_least_deprived$year)), breaks = seq.int(2001, 2023, by = 2)) +  # eh, good enough
  scale_y_continuous(breaks = scales::pretty_breaks(n = 6)) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      x = NULL, 
      y = "Ratio of most to least deprived SIMD", 
      title = "Age-standardised mort. ratio (ASMR)",
      subtitle = "Source: NRS"
      )
)

ratio_simd_most_to_least_deprived %>%
  output_table_with_csv_button(filename = "ratio_simd_most_to_least_deprived", caption = "Ratio of sex-specific age standardised mortality rate (ASMR) in most deprived SIMD quintile (1) to least deprived quintile (5).") %>%
  DT::formatRound(columns = 3:4, digits = 2)
```


# Ratio of most deprived SIMD to least deprived, 5-year averages

```{r}
ratio_simd_most_to_least_deprived_5_year <-
  map_dfr(
    .x = min(ratio_simd_most_to_least_deprived$year) : (max(ratio_simd_most_to_least_deprived$year)-4),
    .f = function(year_start) {
      table_5 %>%
        filter(year %in% year_start:(year_start+4)) %>%
        group_by(sex) %>%
        summarise(
          year_5 = paste0(year_start,"-",year_start+4),
          asmr_most_deprived = mean(age_standardised_rate_of_mortality_asmr[simd_quintile==1]),
          asmr_least_deprived = mean(age_standardised_rate_of_mortality_asmr[simd_quintile==5]),
          ratio_asmr = asmr_most_deprived / asmr_least_deprived,
          raio_deaths = mean(deaths[simd_quintile==1]) / mean(deaths[simd_quintile==5]),
          .groups = "drop"
          )
    }
  ) %>%
  relocate(year_5) %>%
  arrange(sex)

(fig_ratio_simd_5_year <-
  ggplot(data = ratio_simd_most_to_least_deprived_5_year, aes(x=year_5, y=ratio_asmr, colour=sex, group = sex)) +
  geom_line() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.title = element_blank()) +
  scale_y_continuous(breaks = scales::breaks_pretty(n = 6)) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      x = NULL, 
      y = "Ratio of most to least deprived SIMD", 
      title = str_wrap("Ratio of five-year average age-standardised mort. ratio (ASMR) of most deprived to least deprived SIMD quintile"),
      subtitle = "Source: NRS"
      )
)

ratio_simd_most_to_least_deprived_5_year %>%
  output_table_with_csv_button(filename = "ratio_simd_most_to_least_deprived_5_year_average", caption = "Ratio of five-year average sex-specific age standardised mortality rate (ASMR) in most deprived SIMD quintile (1) to least deprived quintile (5).") %>%
  DT::formatRound(columns = 3:6, digits = 2)
```


# Average age at death by suicide over time

```{r}
table_2a <-
  read_excel(path_to_data, sheet = "Table_2A", skip = 4) %>%
  clean_names %>%
  mutate(
    sex = factor(sex, levels = c("Persons", "Males", "Females"))
  )

age_at_death <-
  table_2a %>%
  select(year,sex,average_age_at_death)

(fig_age_at_death <-
  ggplot(data = age_at_death, aes(x=year, y=average_age_at_death, colour=sex, group = sex)) +
  geom_line() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.title = element_blank()) +
  scale_x_continuous(limits = range(age_at_death$year), breaks = scales::breaks_pretty(n = 20)) +  # eh, good enough
  scale_y_continuous(breaks = scales::pretty_breaks(n = 6)) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    labs(
      x = NULL, 
      y = "Average age at death", 
      title = str_wrap("Average age at death by suicide over time, by sex"),
      subtitle = "Source: NRS"
      )
)

age_at_death %>%
  pivot_wider(names_from = sex, values_from = average_age_at_death) %>%
  output_table_with_csv_button(filename = "average_age_at_death", caption = "Average age at death by suicide over time, by sex") %>%
  DT::formatRound(columns = 2:4, digits = 2)
```



# Summaries of changes from last year

```{r}
this_year <- max(age_sex_standardided_mort$year)
last_year <- this_year - 1
```

## By sex & age group

```{r}
(fig_changes_age_group_sex <-
  crude_rate_by_age_group_by_year %>%
  filter(year %in% c(last_year, this_year)) %>%
  ggplot(data = ., aes(x=age_group_new, y=crude_rate, fill = factor(year))) +
  geom_col(position = position_dodge(width = 0.8), width=0.8, colour = "grey10") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
    ) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    facet_wrap(~sex) +
    labs(
      x = NULL, 
      y = "Age-specific crude rate per 100,000", 
      title = str_wrap(glue("Deaths by suicide over time by age group & sex: changes between {last_year} & {this_year}")),
      subtitle = "Source: NRS"
      )
)

crude_rate_by_age_group_by_year %>%
  filter(year %in% c(last_year, this_year)) %>%
  pivot_wider(names_from = age_group_new, values_from = crude_rate) %>%
  arrange(sex) %>%
  output_table_with_csv_button(filename = paste0("crude_rate_by_age_group_and_sex","_",last_year,"_",this_year), caption = "Crude rate of deaths by 100,000 population by age group & sex, comparing this year & last.") %>%
  DT::formatRound(columns = 3:11, digits = 2)
```

## By SIMD

```{r}
(fig_changes_simd_sex <-
  table_5 %>%
  filter(year %in% c(last_year, this_year)) %>%
  mutate(simd_quintile = factor(if_else(simd_quintile==1, paste0(simd_quintile, ": ", quintile_description), as.character(simd_quintile)))) %>%
  ggplot(data = ., aes(x=simd_quintile, y=age_standardised_rate_of_mortality_asmr, fill = factor(year))) +
  geom_col(position = position_dodge(width = 0.8), width=0.8, colour = "grey10") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
    ) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
    facet_wrap(~sex) +
    labs(
      x = NULL, 
      y = "Age-specific crude rate per 100,000", 
      title = str_wrap(glue("Deaths by suicide over time by SIMD & sex: changes between {last_year} & {this_year}")),
      subtitle = "Source: NRS"
      )
)

table_5 %>%
  filter(year %in% c(last_year, this_year)) %>%
  output_table_with_csv_button(filename = paste0("asmr_by_SIMD_sex","_",last_year,"_",this_year), caption = "Age-standardised rate of mortality (ASMR) by SIMD quintile (1=most deprived) and sex, comparing this year & last.") %>%
  DT::formatRound(columns = 5:7, digits = 2)
```

## By HB

```{r}
(fig_changes_hb <-
  five_year_averages_hb %>%
  filter(str_ends(year_5, pattern = paste(c(last_year, this_year), collapse = "|"))) %>%
  ggplot(data = ., aes(x=health_board, y=age_standardised_mortality_rate, fill = factor(year_5))) +
  geom_col(position = position_dodge(width = 0.8), width=0.8, colour = "grey10") +
  facet_wrap(~sex) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
    ) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
  facet_wrap(~sex) +
  labs(
    x = NULL, 
    y = "Five-year average age-standardised rate per 100,000", 
    title = str_wrap(glue("Five-year average deaths by suicide Health Board & sex: changes between {last_year} & {this_year}")),
    subtitle = "Source: NRS"
    )
)
```

## By LA


```{r}
(fig_changes_la <-
  five_year_averages_la %>%
  filter(str_ends(year_5, pattern = paste(c(last_year, this_year), collapse = "|"))) %>%
  ggplot(data = ., aes(x=council_area, y=age_standardised_mortality_rate, fill = factor(year_5))) +
  geom_col(position = position_dodge(width = 0.8), width=0.8, colour = "grey10") +
  facet_wrap(~sex) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
    ) +
  scale_colour_manual(values = c("black","red","blue"), labels = c("All", "Male", "Female")) +
  facet_wrap(~sex) +
  labs(
    x = NULL, 
    y = "Five-year average age-standardised rate per 100,000", 
    title = str_wrap(glue("Five-year average deaths by suicide Council Area & sex: changes between {last_year} & {this_year}")),
    subtitle = "Source: NRS"
    )
)
```


# Proportion of intentional self-harm to undetermined intent by year

This is taken from Table 9.

```{r}
table_9 <-
  read_excel(path_to_data, sheet = "Table_9", skip = 4) %>%
  clean_names

ratio_intentional_to_undetermined <-
  table_9 %>%
  select(year, nature, total) %>%
  group_by(year) %>%
  summarise(
    ratio = total[nature == "Intentional self harm"] / total[nature == "Undetermined intent"]
  )

(fig_ratio_intentional_to_undetermined <-
  ratio_intentional_to_undetermined %>%
  ggplot(aes(x = year, y = ratio)) +
  geom_line() +
  theme_minimal() +
  scale_x_continuous(limits = c(2011, max(ratio_intentional_to_undetermined$year))) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
    ) +
  labs(
    x = NULL, 
    y = "Ratio of intentional self-harm to undetermined intent", 
    title = str_wrap("Nature of suicide diagnosis: ratio of intentional self-harm to undetermined intent over time"),
    subtitle = "Source: NRS"
    )
)

ratio_intentional_to_undetermined %>%
  output_table_with_csv_button(filename = "ratio_intentional_to_undetermined_intent", caption = "Nature of suicide diagnosis: ratio of intentional self-harm to undetermined intent over time") %>%
  DT::formatRound(columns = 2, digits = 2)
```

